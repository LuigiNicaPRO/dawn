{%- comment -%}
{
  "pack_name": "Blog tags",
  "pack_author": "Design Packs"
}
{%- endcomment -%}

{% comment %} Security Code - hides section when app uninstalled {% endcomment %}
{%- unless content_for_header contains 'design_packs_file.js' -%}
  {%- if request.design_mode -%}
    <div class="dsgn-pck__no-app-warning">
      <div class="dsgn-pck__no-app-warning-background">
      </div>
      <div class="dsgn-pck__no-app-warning-text dsgn-pck__rte">
        <p><strong>WARNING!</strong> This premium section will not display properly without an active subscription for <a href="https://apps.shopify.com/design-packs" target="_blank" rel="nofollow">Design Packs</a>. If you need any support please email <a href="mailto:info@design-packs.com" target="_blank">info@design-packs.com</a> with your questions.</p>
      </div>
    </div>
  {%- endif -%}
  {%- break -%}
{%- endunless -%}

{%- comment -%} Layout: has user entered measurement value into max-width field? {%- endcomment -%}
{%- if section.settings.max_width contains 'px' or section.settings.max_width contains '%' -%}
  {%- assign max_width = section.settings.max_width -%}
{%- else -%}
  {%- assign max_width = section.settings.max_width | append: 'px' -%}
{%- endif -%}

{%- comment -%} Text: custom font_picker values {%- endcomment -%}
{%- capture font_settings_list -%}
{{ section.settings.main_font | font_face: font_display: 'swap' }}~
{{ section.settings.main_font | font_modify: 'weight', 'bolder' | font_face: font_display: 'swap' }}~
{{ section.settings.main_font | font_modify: 'style', 'italic' | font_face: font_display: 'swap' }}~
{{ section.settings.main_font | font_modify: 'style', 'italic' | font_modify: 'weight', 'bolder' | font_face: font_display: 'swap' }}~
{%- endcapture -%}
{%- assign font_array = font_settings_list | split: '~' -%}

{%- capture minify -%}
{%- comment -%} CSS {%- endcomment -%}
<style>
{%- if section.settings.override_theme_font != blank -%}
  {%- for font in font_array -%}
    {%- unless font contains 'error' -%}{{ font }}{%- endunless -%}
  {%- endfor -%}
  #DP--{{ section.id }} {
    --main-font: {{ section.settings.main_font.family }}, {{ section.settings.main_font.fallback_families }};
    --main-font-weight: {{ section.settings.main_font.weight }};
    --main-font-style: {{ section.settings.main_font.style }};
  }
{%- endif -%}

#DP--{{ section.id }} {
  margin-bottom: {{ section.settings.outer_margin }}px;
  margin-top: {{ section.settings.outer_margin }}px;
  background: {{ section.settings.background_color }};
}

#DP--{{ section.id }} .dsgn-pck__sizer {
  padding-top: {{ section.settings.inner_padding }}px;
  padding-bottom: {{ section.settings.inner_padding }}px;
  width: {{ section.settings.base_width }}%;
  max-width: {{ max_width }};
}

#DP--{{ section.id }} .dsgn-pck__blog-filter {
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  grid-gap: 24px;
}

#DP--{{ section.id }} .dsgn-pck__tags {
  flex-wrap: wrap;
  margin: 0;
  padding: 0;
}


#DP--{{ section.id }} .dsgn-pck__tags {
  color: {{ section.settings.text_color }};
  line-height: calc(2.5px + 2.5ex + 2.5px);
  font-size: calc(var(--dp-g-body-size, var(--dp-body-size, 18px)) * {{ section.settings.text_size | times: 0.01 }});
  {%- if section.settings.override_theme_font != blank -%}
  font-family: var(--main-font);
  font-weight: var(--main-font-weight);
  font-style: var(--main-font-style);
  {%- endif -%}
  transition: 0.3s ease;
  display: flex;
  list-style: none;
  gap: 1.8rem;
}

#DP--{{ section.id }} .dsgn-pck__tags li {
  cursor: pointer;
}

#DP--{{ section.id }} .dsgn-pck__tags a.dsgn-pck__tag {
  color: {{ section.settings.text_color }};
  transition: 0.3s ease;
  border-radius: {{ section.settings.tag_radius }}px;
  background: {{ section.settings.tag_background_color }};
  min-width: 120px;
  display: inline-block;
  padding: 0.8rem 2.4rem;
  text-transform: uppercase;
  text-decoration: none;
  text-align: center;
}

#DP--{{ section.id }} .dsgn-pck__tags a:hover {
  color: {{ section.settings.text_active_color }};
  background: {{ section.settings.active_color }};
}

#DP--{{ section.id }} .dsgn-pck__tags .dsgn-pck__tag.dsgn-pck__tag--selected {
  color: {{ section.settings.text_active_color }};
  background: {{ section.settings.active_color }};
}

{%- if section.settings.custom_css != blank -%}
  {%- assign custom_section_declarations = section.settings.custom_css | split: '}' -%}
  {%- for declaration in custom_section_declarations -%}
    {%- if declaration contains '{' -%}
      #DP--{{ section.id }} {{ declaration }} }
    {%- endif -%}
  {%- endfor -%}
{%- endif -%}

/* Landscape phones and down */
@media (max-width: 480px) {
  #DP--{{ section.id }} .dsgn-pck__sizer {
    min-width: 70%;
    padding-top: {{ section.settings.inner_padding | divided_by: 2 }}px;
    padding-bottom: {{ section.settings.inner_padding | divided_by: 2 }}px;
  }

  #DP--{{ section.id }} .dsgn-pck__tags.dsgn-pck__scroll {
    justify-content: flex-start;
  }


  #DP--{{ section.id }} .dsgn-pck__tags.dsgn-pck__stacked {
    flex-wrap: wrap;
    margin: 0;
    padding: 0;
  }

  #DP--{{ section.id }} .dsgn-pck__tags.dsgn-pck__scroll {
    flex-wrap: nowrap;
    overflow-y: scroll;
    margin: 0;
    padding: 0;
  }

  {%- if section.settings.mobile_custom_css != blank -%}
    {%- assign mobile_custom_declarations = section.settings.mobile_custom_css | split: '}' -%}
    {%- for declaration in mobile_custom_declarations -%}
      {%- if declaration contains '{' -%}
        #DP--{{ section.id }} {{ declaration }} }
      {%- endif -%}
    {%- endfor -%}
  {%- endif -%}
}
</style>

{%- comment -%} HTML {%- endcomment -%}
<section id="DP--{{ section.id }}" class="DP--{{ section.id }} dsgn-pck__blog-tags dsgn-pck__section ">
  <div class="dsgn-pck__sizer">
    <ul class="dsgn-pck__tags dsgn-pck__justify-{{ section.settings.text_alignment }} dsgn-pck__{{ section.settings.mobile_layout }}" role="navigation" aria-label="tagfilters">
      {%- if blog.tags.size > 0 -%}
        <li>
          <a href="{{ blog.url }}" class="dsgn-pck__tag {% unless current_tags != blank %} dsgn-pck__tag--selected{%- endunless -%}">{{ 'all_topics' | t }}</a>
        </li>
        {% for tag in blog.all_tags %}
          <li>
            <a href="{{ blog.url }}/tagged/{{ tag | handleize }}" class="dsgn-pck__tag {% if current_tags contains tag %}dsgn-pck__tag--selected{%- endif -%}">{{ tag }}</a>
          </li>
        {% endfor %}
      {%- endif -%}
    </ul>
  </div>
</section>
{%- endcapture -%}
{{ minify | strip_newlines }}

{% schema %}
{
  "name": "Blog tags üéí",
  "class": "DP__blog-tags",
  "templates": [
    "article",
    "blog"
  ],
  "settings": [
    {
      "type": "header",
      "content": "‚úèÔ∏è Text appearance"
    },
    {
      "type": "range",
      "id": "text_size",
      "label": "Text size",
      "min": 80,
      "max": 150,
      "step": 5,
      "default": 100,
      "unit": "%"
    },
    {
      "type": "select",
      "id": "text_alignment",
      "label": "Text alignment",
      "default": "left",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ]
    },
    {
      "type": "range",
      "id": "tag_radius",
      "label": "Tag border radius",
      "min": 0,
      "max": 50,
      "step": 5,
      "default": 0,
      "unit": "px"
    },
    {
      "type": "header",
      "content": "üé® Design"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Tag text",
      "default": "#FFFFFF"
    },
    {
      "type": "color",
      "id": "tag_background_color",
      "label": "Tag background",
      "default": "#121212"
    },
    {
      "type": "color",
      "id": "text_active_color",
      "label": "Tag text active",
      "default": "#FFFFFF"
    },
    {
      "type": "color",
      "id": "active_color",
      "label": "Tag background active",
      "default": "#4770DB"
    },
    {
      "type": "color_background",
      "id": "background_color",
      "label": "Background",
      "default": "#FAFAFA"
    },
    {
      "type": "header",
      "content": "üñº Layout"
    },
    {
      "type": "range",
      "id": "base_width",
      "label": "Size",
      "min": 50,
      "max": 100,
      "step": 5,
      "default": 80,
      "unit": "%"
    },
    {
      "type": "text",
      "id": "max_width",
      "label": "Maximum width",
      "placeholder": "eg. 1200px",
      "info": "Sets width constraint for inner content."
    },
    {
      "type": "range",
      "id": "inner_padding",
      "label": "Inner padding",
      "info": "Only applies to top and bottom.",
      "min": 0,
      "max": 100,
      "default": 20,
      "step": 5,
      "unit": "px"
    },
    {
      "type": "header",
      "content": "üì± Mobile layout"
    },
    {
      "type": "select",
      "id": "mobile_layout",
      "label": "Mobile options",
      "options": [
        {
          "value": "stacked",
          "label": "Stacked"
        },
        {
          "value": "scroll",
          "label": "Scroll"
        }
      ]
    },
    {
      "type": "header",
      "content": "üö® Advanced"
    },
    {
      "type": "html",
      "id": "custom_css",
      "label": "CSS"
    },
    {
      "type": "html",
      "id": "mobile_custom_css",
      "label": "Mobile CSS",
      "info": "Applied on screens less than 480px."
    },
    {
      "type": "checkbox",
      "id": "override_theme_font",
      "label": "Override default theme font",
      "default": false
    },
    {
      "type": "font_picker",
      "id": "main_font",
      "label": "Text",
      "default": "sans-serif"
    }
  ],
  "locales": {
    "en": {
      "home": "Home"
    }
  },
  "presets": [
    {
      "name": "Blog tags üéí",
      "settings": {
        "text_size": 100,
        "text_alignment": "left",
        "text_color": "#fafafa",
        "inner_padding": 20,
        "custom_css": "",
        "mobile_custom_css": ""
      }
    }
  ],
  "locales": {
    "en": {
      "filter_by": "Filter by",
      "all_topics": "All"
    }
  }
}
{% endschema %}


  {%- comment -%} JSON Settings {%- endcomment -%}
<script type="application/json" data-dsgn-pck="{{ section.id }}">
  {
    "id": {{ section.id | json }}
  }
</script>
{%- comment -%} JavaScript {%- endcomment -%}
<script data-dsgn-pck-js="{{ section.id }}">
(function(){

  const designPack = {
    settings: {},
    setTagUrl: function(e){
      const blog_url = "{{ blog.url }}";
      let new_location ;
      if (e.target.value == 'all') {
        new_location = `${blog_url}`;
      } else {
        new_location = `${blog_url}/tagged/${e.target.value}`;
      }

      window.location.href = new_location;
    },
    load: function(section){
      const tag_select = document.getElementById('dsgnPckTags')''

      document.addEventListener("DOMContentLoaded", function(e) {
        if(e.target.URL.includes('tagged')){
          let url_split = e.target.URL.split('/');
          let tag = url_split[url_split.length - 1];
          console.log('tag', tag, url_split );
          tag_select.value = tag;
        } else {
          tag_select.value = "all";
        }
      });

      tag_select.addEventListener('change', function(e){
          designPack.setTagUrl(e)
      });

    },
    unload: function(section){

    }
  }

  window.addEventListener('shopify:section:unload', function (e) {
    const settings = document.querySelector(`[data-dsgn-pck="${e.detail.sectionId}"]`);
    const sectionId = e.detail.sectionId;
    const section = document.querySelector(`#DP--${e.detail.sectionId}`);
    if (sectionId == designPack.settings.id){
      designPack.unload(section);
    }
  });

  designPack.settings = JSON.parse(document.querySelector('[data-dsgn-pck="{{ section.id }}"]').innerHTML);
  const sectionId = {{ section.id | json }};
  const section = document.querySelector(`#DP--${sectionId}`);

  if (sectionId == designPack.settings.id){
    designPack.load(section);
  }
})()
</script>
